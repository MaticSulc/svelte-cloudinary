name: Test & Release

on:
  push:
    branches:
      - main
  pull_request:

env:
    CI: false

jobs:
    tests:
        name: Test
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node: ['18']
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v2

            - name: Setup Node 18
              uses: actions/setup-node@v4
              with:
                node-version: 18
                registry-url: https://registry.npmjs.org/

            - name: Setup PNPM
              uses: pnpm/action-setup@v3.0.0
              with:
                  version: 8.12.1

            - name: Install deps
              run: pnpm install --frozen-lockfile

            - name: Build package
              run: pnpm package

            - name: Lint
              run: pnpm lint

            # - name: Svelte Check
            #   run: pnpm check

            - name: Test
              run: pnpm test
              env:
                VITE_PUBLIC_CLOUDINARY_CLOUD_NAME: svelte-cloudinary

    release:
        name: Release
        if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/beta') }}
        needs: tests
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v2

            - name: Setup Node 20
              uses: actions/setup-node@v4
              with:
                node-version: 20
                registry-url: https://registry.npmjs.org/

            - name: Setup PNPM
              uses: pnpm/action-setup@v3.0.0
              with:
                  version: 8.12.1

            - name: Install deps
              run: pnpm install --frozen-lockfile

            - name: Build package
              run: pnpm package

            - name: Release
              run: pnpm exec semantic-release
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
